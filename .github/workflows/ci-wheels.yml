# A workflow to build, test and publish PyPI sdist/bdist artifacts
#
# Reference:
#   - https://github.com/actions/checkout
#   - https://github.com/actions/download-artifact
#   - https://github.com/actions/setup-python
#   - https://github.com/actions/upload-artifact
#   - https://github.com/pypa/build
#   - https://github.com/pypa/gh-action-pypi-publish
#   - https://test.pypi.org/help/#apitoken

name: ci-wheels

on: [pull_request, push]


jobs:
  build-artifacts:
    name: "Build PyPI artifacts"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: "Build sdist/bdist"
      run: |
        # ugrid-checks is a pure python package, so simply use pypa/build
        pipx run build

    - name: "Show sdist/bdist"
      run: |
        ls -l ${{ github.workspace }}/dist

    - uses: actions/upload-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/dist


  test-artifacts:
    needs: [build-artifacts]
    name: "Test bdist"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v4.1.0
      with:
        python-version: "3.10"

    - uses: actions/download-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/dist

    - name: "Install and import bdist"
      working-directory: ${{ github.workspace }}/dist
      run: |
        python -m pip install ugrid_checks-*.whl
        python -c "import ugrid_checks; print(f'Successfully imported ugrid-checks-{ugrid_checks.__version__}')"
        echo "All done üëç"


  publish-artifacts-test-pypi:
    needs: [test-artifacts]
    name: "Publish to Test PyPI"
    runs-on: ubuntu-latest
    # upload to Test PyPI for every commit on main branch
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
        print_hash: true


  publish-artifacts-pypi:
    needs: [test-artifacts]
    name: "Publish to PyPI"
    runs-on: ubuntu-latest
    # upload to PyPI for every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        print_hash: true
